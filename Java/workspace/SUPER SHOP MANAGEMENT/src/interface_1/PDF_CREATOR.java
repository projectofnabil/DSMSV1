package interface_1;
import java.io.FileOutputStream;
import java.util.Date;

//import com.itextpdf.text.Anchor;
//import com.itextpdf.text.BadElementException;
//import com.itextpdf.text.BaseColor;
//import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
//import com.itextpdf.text.List;
//import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
//import com.itextpdf.text.Rectangle;
//import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

//import com.itextpdf.text.BaseColor;
//import com.itextpdf.text.Font;

public class PDF_CREATOR {
	private static String FILE = "D:/CASH_MEMO/MEMO2.pdf";
	  private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
	      Font.BOLD);
//	  private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
//	      Font.NORMAL, BaseColor.RED);
	  //private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
	    //  Font.BOLD);
	  private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	      Font.BOLD);
	  private static Document document;
	  private static   PdfPCell c1; 
	  private static PdfPTable table;
	  //private static PdfPTable table1;
	  public PDF_CREATOR ()
	   {


		try {
			   document=new Document();    
		      PdfWriter.getInstance(document, new FileOutputStream(FILE));
		   
		      document.open();
		      addMetaData();
		      //addTitlePage(document,n,product_id,name,unit_price,quantity,total);
		     // addContent(document);
		    //  document.close();
		    } catch (Exception e) {
		      e.printStackTrace();
		    }
		  }
	
	  // iText allows to add metadata to the PDF which can be viewed in your Adobe
	  // Reader
	  // under File -> Properties
	  private static void addMetaData() {
	    document.addTitle("KUET DS");
	    document.addSubject("SHOPPING SLIP");
	    document.addKeywords("Java, PDF, iText");
	    document.addAuthor("USER");
	    document.addCreator("NABIL SARWAR");
	  }

	  public  void addTitlePage(int n,String product_id,String name,double unit_price,String quantity,double total)
	      throws DocumentException {
	    Paragraph preface = new Paragraph();
	    // We add one empty line
	    addEmptyLine(preface, 1);
	    // Lets write a big header
	    preface.add(new Paragraph("KUET DEPARTMENTAL STORE", catFont));

	    addEmptyLine(preface, 1);
	    // Will create: Report generated by: _name, _date
	    preface.add(new Paragraph("REPORT GENERATED AT: " + new Date(), smallBold));
	    addEmptyLine(preface, 1);
	    document.add(preface);
	    //addEmptyLine(preface, 1);
	    createTable(n,product_id,name,unit_price,quantity, total);
	    Paragraph preface1 = new Paragraph();
	   addEmptyLine(preface1, 1);
	    // preface1.add(new Paragraph("THANK YOU FOR SHOPPING IN KUET DS", catFont));
	    document.add(preface1);
	   
	    
	    // Start a new page
	    //document.newPage();
	  }



	  private static void createTable(int n,String product_id,String name,double unit_price,String quantity,double total)
	      throws DocumentException {
	     table = new PdfPTable(5);


	   c1 = new PdfPCell(new Phrase("PRODUCT ID"));
	    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    table.addCell(c1);

	    c1 = new PdfPCell(new Phrase("PRODUCT NAME"));
	    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    table.addCell(c1);

	    c1 = new PdfPCell(new Phrase("UNIT PRICE"));
	    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    table.addCell(c1);
	    
	    c1 = new PdfPCell(new Phrase("QUANTITY"));
	    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    table.addCell(c1);
	    
	    
	    c1 = new PdfPCell(new Phrase("TOTAL"));
	    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    table.addCell(c1);
	    
	     table.setHeaderRows(1);
for(int u=0;u<n;u++){
	    table.addCell(product_id);
	    table.addCell(name);
	    table.addCell(Double.toString(unit_price));
	    table.addCell(quantity);
	    table.addCell(Double.toString(total));
}
//return table;
//	    document.add(table);

	  }

public  void add_table(int n,String product_id,String name,double unit_price,String quantity,double total) throws DocumentException{
	
	
	
	
	

	for(int u=0;u<n;u++){
	    table.addCell(product_id);
	    table.addCell(name);
	    table.addCell(Double.toString(unit_price));
	    table.addCell(quantity);
	    table.addCell(Double.toString(total));
}

	    //document.add(table);
}
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  


	  private static void addEmptyLine(Paragraph paragraph, int number) {
	    for (int i = 0; i < number; i++) {
	      paragraph.add(new Paragraph(" "));
	    }
	  }
	  
	  public void close1(){
		  document.close();
	  }
	  
	  public void add() throws DocumentException{
		  
		  document.add(table);
	  }
	  public void new_paragraph(String s) throws DocumentException{
		  
		  Paragraph preface2 = new Paragraph();
		    preface2.add(new Paragraph(s,catFont));
		//    addEmptyLine(preface2, 10);
		    document.add(preface2);  
		  
		  
	  }
	  
	  
	  public void add_empty_line(int n) throws DocumentException{
		  Paragraph p1=new Paragraph();
		  addEmptyLine(p1, n);
		document.add(p1);  
		  
	  }
	  public void open1(){
		  document.open();   
		  
		  
	  }
	  
	  
	  
	  
	  
	} 	
